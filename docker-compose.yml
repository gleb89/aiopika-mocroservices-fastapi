version: '3'

services:
  dat:
    restart: always
    image: "postgres:13-alpine"
    restart: always
    volumes:
      - ./base_data/:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - back
      
  service_produser:
    restart: always
    build: ./service_produser
    command: uvicorn main:app --reload --workers 1 --host 0.0.0.0 --port 8000
    depends_on:
      - rabbit
    restart: on-failure
    networks:
      - back

  service_consumer:
    restart: always
    build: ./service_consumer
    command: uvicorn main:app --reload --workers 1 --host 0.0.0.0 --port 8001
    depends_on:
      - dat
      - rabbit
    restart: on-failure
    networks:
        - back

  nginx:
    image: nginx:1.17
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
    depends_on: 
      - service_produser
      - service_consumer
    networks:
      - back
    ports:
      - "8080:8080"
      - "443:443"

  rabbit:
    image: "bitnami/rabbitmq:3.7"
    ports:
      - "4369:4369"
      - "5672:5672"
      - "25672:25672"
      - "15672:15672"
    # volumes:
    #   - "rabbit_data:/bitnami"
    networks:
      - back

  consumer:
    build: ./service_consumer
    command: python cons.py
    restart: on-failure
    depends_on: 
      - rabbit
    networks:
      - back

networks:
  back:
    driver: bridge
